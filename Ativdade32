#include <stdio.h>
#define MAX_SIZE 100

int queue[MAX_SIZE];
int front = -1, rear = -1;

void enqueue(int value) {
  if (rear == MAX_SIZE - 1) {
    printf("Queue is full. Cannot insert more values.\n");
  } else {
    if (front == -1) {
      front = 0;
    }
    rear++;
    queue[rear] = value;
  }
}

void display() {
  if (front == -1) {
    printf("Queue is empty.\n");
  } else {
    printf("Queue elements: ");
    for (int i = front; i <= rear; i++) {
      printf("%d ", queue[i]);
    }
    printf("\n");
  }
}

void sortQueue() {
  int i, j, temp;
  for (i = front; i <= rear; i++) {
    for (j = i + 1; j <= rear; j++) {
      if (queue[i] > queue[j]) {
        temp = queue[i];
        queue[i] = queue[j];
        queue[j] = temp;
      }
    }
  }
}

int main() {
  int choice, value;

  do {
    printf("\nChoose an option:\n");
    printf("1.     Insira novo calor\n");
    printf("2. Mostra Valores\n");
    printf("3. Classificar \n");
    printf("4. Sair\n");
    scanf("%d", &choice);

    switch (choice) {
    case 1:
      printf("Digite o valor a ser inserido: ");
      scanf("%d", &value);
      enqueue(value);
      break;
    case 2:
      display();
      break;
    case 3:
      sortQueue();
      printf("Digite o valor a ser inserido:\n");
      break;
    case 4:
      printf("Sair.\n");
      break;
    default:
      printf("Escolha inv√°lida. Pfv tente novamente.\n");
      break;
    }
  } while (choice != 4);

  return 0;
}
